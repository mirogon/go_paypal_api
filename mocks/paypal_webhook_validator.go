// Code generated by MockGen. DO NOT EDIT.
// Source: paypal_webhook_validator.go

// Package mock_paypal_api is a generated GoMock package.
package mock_paypal_api

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	http_ "github.com/mirogon/go_http"
	paypal_api "github.com/mirogon/go_paypal_api"
)

// MockPaypalWebhookValidator is a mock of PaypalWebhookValidator interface.
type MockPaypalWebhookValidator struct {
	ctrl     *gomock.Controller
	recorder *MockPaypalWebhookValidatorMockRecorder
}

// MockPaypalWebhookValidatorMockRecorder is the mock recorder for MockPaypalWebhookValidator.
type MockPaypalWebhookValidatorMockRecorder struct {
	mock *MockPaypalWebhookValidator
}

// NewMockPaypalWebhookValidator creates a new mock instance.
func NewMockPaypalWebhookValidator(ctrl *gomock.Controller) *MockPaypalWebhookValidator {
	mock := &MockPaypalWebhookValidator{ctrl: ctrl}
	mock.recorder = &MockPaypalWebhookValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaypalWebhookValidator) EXPECT() *MockPaypalWebhookValidatorMockRecorder {
	return m.recorder
}

// GetWebhookData mocks base method.
func (m *MockPaypalWebhookValidator) GetWebhookData(req *http.Request) (paypal_api.WebhookValidationRequest, paypal_api.WebhookNotification, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWebhookData", req)
	ret0, _ := ret[0].(paypal_api.WebhookValidationRequest)
	ret1, _ := ret[1].(paypal_api.WebhookNotification)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetWebhookData indicates an expected call of GetWebhookData.
func (mr *MockPaypalWebhookValidatorMockRecorder) GetWebhookData(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWebhookData", reflect.TypeOf((*MockPaypalWebhookValidator)(nil).GetWebhookData), req)
}

// ValidateWebHook mocks base method.
func (m *MockPaypalWebhookValidator) ValidateWebHook(webHookValidationReq paypal_api.WebhookValidationRequest, webHookId string, requestSender http_.HttpRequestSender, paypalApiAddress, token string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateWebHook", webHookValidationReq, webHookId, requestSender, paypalApiAddress, token)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateWebHook indicates an expected call of ValidateWebHook.
func (mr *MockPaypalWebhookValidatorMockRecorder) ValidateWebHook(webHookValidationReq, webHookId, requestSender, paypalApiAddress, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateWebHook", reflect.TypeOf((*MockPaypalWebhookValidator)(nil).ValidateWebHook), webHookValidationReq, webHookId, requestSender, paypalApiAddress, token)
}
